@model ProductResponseViewModel

@{int[] existCategoryIds = ViewBag.ExistCategoryIds as int[] ?? [];}

<link rel="stylesheet" href="~/css/pivot-table.css">

<div class="container-fluid">
    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Ürün Güncelle</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                <form asp-controller="Products" asp-action="Update" asp-route-PageIndex="@ViewBag.PageIndex" method="post">
                    <div class="card-body">

                        @if (ViewBag.IsLockedProductType)
                        {
                            <div class="form-group">
                                <label>Ürün Tipi</label>
                                <input asp-for="ProductType" type="text" class="form-control" readonly>
                            </div>
                        } 
                        else
                        {
                            <div class="form-group">
                                <label>Ürün Tipi</label>
                                <select asp-for="ProductType" class="form-control">
                                    @foreach (string productType in ViewBag.ProductTypes)
                                    {
                                        if(productType == Model.ProductType)
                                        {
                                            <option value="@productType" selected>@productType</option>
                                        }
                                        else
                                        {
                                            <option value="@productType">@productType</option>
                                        }  
                                    }
                                </select>
                            </div>
                        }
          
                        <div class="form-group" id="pivot">

                        </div>

                        <input type="hidden" id="selectedCategories" name="selectedCategoryIds">

                        <div class="form-group">
                            <label>Ürün Kodu</label>
                            <input asp-for="ProductCode" type="text" class="form-control">
                        </div>

                        <div class="form-group">
                            <label>Ürün Adı</label>
                            <input asp-for="ProductName" type="text" class="form-control">
                        </div>

                        <div class="form-group">
                            <label>Ürün Açıklaması</label>
                            <input asp-for="ProductDescription" type="text" class="form-control">
                        </div>

                        <div class="form-group">
                            <label>Ürün Görsel Linki</label>
                            <input asp-for="ProductImageUrl" type="url" class="form-control">
                        </div>

                        <div class="form-group">
                            <label>Ürün Fiyatı</label>
                            <input asp-for="ProductPrice" type="text" class="form-control">
                        </div>

                        <div class="form-check">
                            <input asp-for="IsAddToCart" type="checkbox" class="form-check-input" id="exampleCheck1" checked="@Model.IsAddToCart">
                            <label class="form-check-label" for="exampleCheck1">Oluşturduğunuz Yeni Ürün Karttan Direkt Sepete Eklensin Mi?</label>
                        </div>
                    </div>
                    <!-- /.card-body -->

                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary">Güncelle</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function parseAndPivot(dataArray, existCategoryIds) {
        const result = {};
        const rowIdMap = {}; // Map for storing unique row values with IDs
        let rowIdCounter = 1;

        dataArray.forEach(entry => {
            if (typeof entry !== 'object' || !entry.id || !entry.fullCategoryName) {
                console.error('Geçersiz veri formatı:', entry);
                return;
            }

            const id = entry.id;
            const parts = entry.fullCategoryName.split(' > ');
            const schoolName = parts[0];
            const restPath = parts.slice(1).join(' > ');

            if (!result[schoolName]) {
                result[schoolName] = new Map();
            }
            result[schoolName].set(restPath, id);

            if (!rowIdMap[restPath]) {
                rowIdMap[restPath] = restPath;
            }
        });

        // Convert Maps to Objects for easier usage
        const pivotTable = {};
        Object.keys(result).forEach(key => {
            pivotTable[key] = Object.fromEntries(result[key]);
        });

        // Get all unique row values
        const uniqueRows = Object.keys(rowIdMap);

        // Create HTML Table
        let html = '<table class="pivot-table"><tr><th>Category MultiSelectBox in PivotTable Form</th>';
        Object.keys(pivotTable).forEach(school => {
            html += `<th>${school}</th>`;
        });
        html += '</tr>';

        uniqueRows.forEach(row => {
            html += `<tr><td>${row}</td>`;
            Object.keys(pivotTable).forEach(school => {
                const fullCategory = row;
                const categoryId = pivotTable[school]?.[fullCategory];
                const checked = categoryId && existCategoryIds.includes(categoryId) ? 'checked' : '';
                const disabled = categoryId ? '' : 'disabled';
                const value = categoryId ? categoryId : '';

                html += `<td><input type='checkbox' name='SelectedItems' value='${value}' ${checked} ${disabled}></td>`;
            });
            html += '</tr>';
        });

        html += '</table>';

        document.getElementById('pivot').innerHTML = html;
    }

    // MVC ViewBag verisini al
    const data = @Html.Raw(Json.Serialize(ViewBag.AllCategories));
    const existCategoryIds = @Html.Raw(Json.Serialize(ViewBag.ExistCategoryIds));
    parseAndPivot(data, existCategoryIds);

</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("pivot").addEventListener("change", function () {
            let selectedValues = Array.from(document.querySelectorAll("#pivot input[type='checkbox']:checked"))
                .map(checkbox => checkbox.value)
                .filter(value => value); // Boş değerleri filtrele

            console.log("Seçili ID'ler:", selectedValues); // Konsolda kontrol etmek için

            document.getElementById("selectedCategories").value = selectedValues.join(",");
        });
    });


</script>